name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  lint:
    strategy:
      fail-fast: false
      matrix:
        lint-command:
          - bandit -r . -x ./tests
          - black --check --diff .
          - flake8 .
          - isort --check-only --diff .
          - pydocstyle .
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: pip
          cache-dependency-path: linter-requirements.txt
      - run: python -m pip install -r linter-requirements.txt
      - run: ${{ matrix.lint-command }}

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip build wheel twine readme-renderer
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: sudo apt install -y python3-enchant
      - run: python -m pip install sphinxcontrib-spelling
      - run: python -m pip install -e '.[docs]'
      - run: python -m sphinx -W -b spelling docs docs/_build

  SQLite:
    needs: [ lint, dist, docs ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -e '.[test]'
      - run: python -m pytest
      - uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.python-version }}

  contrib:
    needs: [ lint, dist, docs ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extras:
          - wagtail
        python-version: [ "3.x" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -e ".[test,${{ matrix.extras }}]"
      - run: python -m pytest
      - uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.extras }}


  PostgreSQL:
    needs: [ lint, dist, docs ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
        django-version:
          - "4.0"
          - "4.1"
        extras:
          - postgres
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v3
      - run: python -m pip install Django~=${{ matrix.django-version }}.0 -e ".[test,${{ matrix.extras }}]"
      - run: python -m pytest
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          DB: pg
      - uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.extras }}

  analyze:
    name: CodeQL
    needs: [ SQLite, contrib, PostgreSQL ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ python ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        if: ${{ matrix.language == 'javascript' || matrix.language == 'python' }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"
