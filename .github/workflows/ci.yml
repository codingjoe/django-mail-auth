name: CI
on: [pull_request]
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1.1.1
      - uses: actions/checkout@v2.0.0
      - run: python -m pip install -r requirements.txt
      - run: python setup.py develop
      - run: python setup.py build_sphinx -W

  SQLite:
    needs: [docs]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2.0.0
      - run: python setup.py test
      - name: Codecov
        run: |
          python -m pip install codecov
          codecov -t ${{secrets.CODECOV_TOKEN}}


  PostgreSQL:
    needs: [docs]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        django-version:
          - "2.2"
          - "3.0"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2.0.0
      - run: python -m pip install psycopg2-binary Django~=${{ matrix.django-version }}
      - run: python setup.py test
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          DB: pg
      - name: Codecov
        run: |
          python -m pip install codecov
          codecov -t ${{secrets.CODECOV_TOKEN}}
